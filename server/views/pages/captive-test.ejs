<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Captive Portal Test</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .test { margin: 10px 0; padding: 10px; border: 1px solid #ccc; }
        .success { background: #d4edda; border-color: #c3e6cb; }
        .fail { background: #f8d7da; border-color: #f5c6cb; }
        .pending { background: #fff3cd; border-color: #ffeaa7; }
    </style>
</head>
<body>
    <h1>PISOWifi Captive Portal Diagnostic Test</h1>
    <p>This page tests if captive portal detection is working properly.</p>
    
    <div id="tests">
        <div id="test1" class="test pending">
            <h3>Test 1: Android connectivity check</h3>
            <p>Testing: <code>connectivitycheck.gstatic.com/generate_204</code></p>
            <div id="result1">Testing...</div>
        </div>
        
        <div id="test2" class="test pending">
            <h3>Test 2: Apple captive check</h3>
            <p>Testing: <code>captive.apple.com/hotspot-detect.html</code></p>
            <div id="result2">Testing...</div>
        </div>
        
        <div id="test3" class="test pending">
            <h3>Test 3: Microsoft connectivity test</h3>
            <p>Testing: <code>www.msftconnecttest.com/connecttest.txt</code></p>
            <div id="result3">Testing...</div>
        </div>
        
        <div id="test4" class="test pending">
            <h3>Test 4: DNS Resolution</h3>
            <p>Testing if external domains resolve to this server</p>
            <div id="result4">Testing...</div>
        </div>
    </div>

    <h2>Manual Tests</h2>
    <p>Try accessing these URLs directly:</p>
    <ul>
        <li><a href="/generate_204" target="_blank">/generate_204</a></li>
        <li><a href="/hotspot-detect.html" target="_blank">/hotspot-detect.html</a></li>
        <li><a href="/connecttest.txt" target="_blank">/connecttest.txt</a></li>
    </ul>

    <h2>Network Configuration Check</h2>
    <div id="networkInfo">
        <p><strong>Your IP:</strong> <%= typeof clientIP !== 'undefined' ? clientIP : 'Unknown' %></p>
        <p><strong>Server:</strong> <%= typeof serverHost !== 'undefined' ? serverHost : req.headers.host %></p>
        <p><strong>Time:</strong> <%= new Date().toISOString() %></p>
    </div>

    <script>
        function runTest(testId, url, expectedBehavior) {
            const testDiv = document.getElementById(testId);
            const resultDiv = document.getElementById(`result${testId.slice(-1)}`);
            
            fetch(url, { 
                method: 'GET',
                mode: 'no-cors'  // Avoid CORS issues
            })
            .then(response => {
                if (response.redirected) {
                    testDiv.className = 'test success';
                    resultDiv.innerHTML = `✅ SUCCESS: Redirected to ${response.url}`;
                } else {
                    testDiv.className = 'test fail';
                    resultDiv.innerHTML = `❌ FAIL: No redirect (Status: ${response.status})`;
                }
            })
            .catch(error => {
                testDiv.className = 'test fail';
                resultDiv.innerHTML = `❌ ERROR: ${error.message}`;
            });
        }

        // Run tests
        setTimeout(() => {
            runTest('test1', '/generate_204', 'redirect');
            runTest('test2', '/hotspot-detect.html', 'redirect');
            runTest('test3', '/connecttest.txt', 'redirect');
            
            // Test DNS resolution
            const result4 = document.getElementById('result4');
            const test4 = document.getElementById('test4');
            
            fetch('http://google.com', { 
                method: 'GET', 
                mode: 'no-cors',
                timeout: 5000 
            })
            .then(response => {
                test4.className = 'test success';
                result4.innerHTML = '✅ DNS working: External domains resolve to this server';
            })
            .catch(error => {
                test4.className = 'test fail';
                result4.innerHTML = `❌ DNS issue: ${error.message}`;
            });
            
        }, 1000);
    </script>
</body>
</html>