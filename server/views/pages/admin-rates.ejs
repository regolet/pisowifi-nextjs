<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coin Rates - PISOWifi Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        .coin-preview {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(145deg, #ffd700, #ffed4e);
            border: 2px solid #b8860b;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: #8b4513;
            box-shadow: 0 2px 4px rgba(255, 215, 0, 0.3);
        }
        
        /* Custom toggle switch styles */
        input[type="checkbox"]:checked ~ div {
            background-color: #3b82f6;
        }
        
        /* Table input focus styles */
        input[type="text"]:focus,
        input[type="number"]:focus,
        select:focus {
            border-bottom-color: #3b82f6 !important;
            outline: none;
        }
        
        /* Smooth transitions for interactive elements */
        tr {
            transition: background-color 0.15s ease;
        }
        
        /* Loading spinner animation */
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .animate-spin {
            animation: spin 1s linear infinite;
        }
    </style>
</head>
<body class="bg-gray-200 flex h-screen">
    <%- include('../partials/admin-sidebar') %>
    
    <!-- Main Content -->
    <div class="flex-1 overflow-y-auto">
        <div class="p-6">
            <div class="mb-6">
                <h1 class="text-xl font-bold text-black">Coin Rates Management</h1>
                <p class="text-sm text-gray-600 mt-1">Configure coin denominations, pulse counts, and time packages</p>
            </div>

            <!-- Statistics Overview -->
            <div class="bg-gray-50 border border-gray-300 rounded-lg mb-6">
                <div class="px-4 py-3 border-b border-gray-300">
                    <h2 class="text-sm font-semibold text-black">System Statistics</h2>
                </div>
                <div class="divide-y divide-gray-300">
                    <div class="px-4 py-3 flex justify-between items-center">
                        <span class="text-sm text-black">Active Rate Packages</span>
                        <span class="text-sm font-semibold text-black" id="total-packages">0</span>
                    </div>
                    <div class="px-4 py-3 flex justify-between items-center">
                        <span class="text-sm text-black">Today's Revenue</span>
                        <span class="text-sm font-semibold text-black" id="revenue-today">₱0.00</span>
                    </div>
                    <div class="px-4 py-3 flex justify-between items-center">
                        <span class="text-sm text-black">Total Coins Today</span>
                        <span class="text-sm font-semibold text-black" id="total-pulses">0</span>
                    </div>
                    <div class="px-4 py-3 flex justify-between items-center">
                        <span class="text-sm text-black">Last Coin Inserted</span>
                        <span class="text-sm font-semibold text-black" id="last-pulse">Never</span>
                    </div>
                </div>
            </div>

            <!-- Coin Settings -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div class="bg-gray-50 border border-gray-300 rounded-lg">
                    <div class="px-4 py-3 border-b border-gray-300">
                        <h2 class="text-sm font-semibold text-black">Coin Configuration</h2>
                    </div>
                    <div class="p-4">
                        <form id="coin-config-form" class="space-y-4">
                            <div>
                                <label class="block text-black text-sm font-medium mb-2">
                                    Coin Value (₱)
                                </label>
                                <select id="coin_value" name="coin_value" 
                                        class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-lg text-black">
                                    <option value="1">₱1.00</option>
                                    <option value="5" selected>₱5.00</option>
                                    <option value="10">₱10.00</option>
                                    <option value="20">₱20.00</option>
                                </select>
                            </div>
                            
                            <div>
                                <label class="block text-black text-sm font-medium mb-2">
                                    Pulses per Coin
                                </label>
                                <input type="number" id="pulses_per_coin" name="pulses_per_coin" 
                                       class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-lg text-black"
                                       value="1" min="1" max="10">
                            </div>
                            
                            <button type="submit" 
                                    class="w-full py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors">
                                Update Coin Settings
                            </button>
                        </form>
                    </div>
                </div>

                <div class="bg-gray-50 border border-gray-300 rounded-lg">
                    <div class="px-4 py-3 border-b border-gray-300">
                        <h2 class="text-sm font-semibold text-black">Test Controls</h2>
                    </div>
                    <div class="p-4 space-y-2">
                        <button onclick="testCoinPulse()" 
                                class="w-full px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded text-sm">
                            Test Coin Pulse
                        </button>
                        <button onclick="resetCounters()" 
                                class="w-full px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded text-sm">
                            Reset Counters
                        </button>
                    </div>
                </div>
            </div>

            <!-- Rate Packages Table -->
            <div class="bg-white shadow-sm rounded-lg overflow-hidden">
                <div class="px-6 py-4 bg-gray-50 border-b border-gray-200 flex justify-between items-center">
                    <h2 class="text-lg font-semibold text-gray-900">Rate Packages</h2>
                    <button onclick="addNewRate()" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm font-medium transition-colors">
                        <svg class="w-4 h-4 inline-block mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                        </svg>
                        Add Package
                    </button>
                </div>
                
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Package Name
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Duration
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Coins
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Price
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Rate/Hour
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Status
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody id="rates-table-body" class="bg-white divide-y divide-gray-200">
                            <tr>
                                <td colspan="7" class="px-6 py-12 text-center text-sm text-gray-500">
                                    <div class="inline-flex items-center">
                                        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24">
                                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                        </svg>
                                        Loading rate packages...
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
                    <button onclick="saveAllRates()" 
                            class="w-full px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-medium rounded-md transition-colors">
                        Save All Rate Packages
                    </button>
                </div>
            </div>

            <!-- Activity Log -->
            <div class="bg-gray-50 border border-gray-300 rounded-lg mt-6">
                <div class="px-4 py-3 border-b border-gray-300 flex justify-between items-center">
                    <h2 class="text-sm font-semibold text-black">Activity Log</h2>
                    <button onclick="clearActivityLog()" class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded text-xs">
                        Clear Log
                    </button>
                </div>
                <div id="activity-log" class="p-4 bg-gray-100 h-32 overflow-y-auto">
                    <div class="text-gray-600 text-sm">Activity logs will appear here...</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentRates = [];
        let coinSettings = {
            coin_value: 5,
            pulses_per_coin: 1
        };

        // Load data on page load
        loadRates();
        loadCoinSettings();
        updateStats();

        async function loadRates() {
            try {
                // Mock data for now
                currentRates = [
                    { id: 1, name: '15 Minutes', duration: 900, coins_required: 1, price: 5, is_active: true },
                    { id: 2, name: '30 Minutes', duration: 1800, coins_required: 2, price: 10, is_active: true },
                    { id: 3, name: '1 Hour', duration: 3600, coins_required: 4, price: 20, is_active: true },
                    { id: 4, name: '2 Hours', duration: 7200, coins_required: 8, price: 40, is_active: false }
                ];
                renderRatesTable();
                updateStats();
            } catch (error) {
                addActivityLog('Failed to load rates: ' + error.message, 'error');
            }
        }

        function renderRatesTable() {
            const tbody = document.getElementById('rates-table-body');
            
            if (currentRates.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7" class="px-6 py-12 text-center">
                            <div class="text-gray-500">
                                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
                                </svg>
                                <p class="mt-2 text-sm">No rate packages configured</p>
                                <button onclick="addNewRate()" class="mt-3 text-sm text-blue-600 hover:text-blue-500">
                                    Create your first package
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
                return;
            }
            
            tbody.innerHTML = currentRates.map((rate, index) => `
                <tr class="hover:bg-gray-50 transition-colors">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <input type="text" value="${rate.name}" 
                               onchange="updateRate(${index}, 'name', this.value)"
                               class="text-sm text-gray-900 bg-transparent border-0 border-b border-transparent hover:border-gray-300 focus:border-blue-500 focus:outline-none px-1 py-1 w-full transition-colors">
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <select onchange="updateRateDuration(${index}, this.value)"
                                class="text-sm text-gray-900 bg-transparent border-0 border-b border-transparent hover:border-gray-300 focus:border-blue-500 focus:outline-none px-1 py-1 transition-colors cursor-pointer">
                            <option value="900" ${rate.duration === 900 ? 'selected' : ''}>15 min</option>
                            <option value="1800" ${rate.duration === 1800 ? 'selected' : ''}>30 min</option>
                            <option value="3600" ${rate.duration === 3600 ? 'selected' : ''}>1 hour</option>
                            <option value="7200" ${rate.duration === 7200 ? 'selected' : ''}>2 hours</option>
                            <option value="14400" ${rate.duration === 14400 ? 'selected' : ''}>4 hours</option>
                            <option value="28800" ${rate.duration === 28800 ? 'selected' : ''}>8 hours</option>
                            <option value="86400" ${rate.duration === 86400 ? 'selected' : ''}>24 hours</option>
                        </select>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <input type="number" value="${rate.coins_required}" min="1" max="20"
                                   onchange="updateRate(${index}, 'coins_required', this.value)"
                                   class="text-sm text-gray-900 bg-transparent border-0 border-b border-transparent hover:border-gray-300 focus:border-blue-500 focus:outline-none px-1 py-1 w-16 transition-colors">
                            <span class="ml-1 text-xs text-gray-500">coins</span>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <span class="text-gray-500 text-sm mr-1">₱</span>
                            <input type="number" value="${rate.price}" step="0.01" min="0"
                                   onchange="updateRate(${index}, 'price', this.value)"
                                   class="text-sm text-gray-900 bg-transparent border-0 border-b border-transparent hover:border-gray-300 focus:border-blue-500 focus:outline-none px-1 py-1 w-20 transition-colors">
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        <span class="font-medium text-gray-900">₱${(rate.price / (rate.duration / 3600)).toFixed(2)}</span>
                        <span class="text-xs text-gray-500">/hr</span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <label class="relative inline-flex items-center cursor-pointer">
                            <input type="checkbox" ${rate.is_active ? 'checked' : ''} 
                                   onchange="toggleRateStatus(${index})" 
                                   class="sr-only peer">
                            <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                        </label>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <div class="flex items-center space-x-2">
                            <button onclick="duplicateRate(${index})" 
                                    class="text-gray-600 hover:text-blue-600 transition-colors"
                                    title="Duplicate">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                </svg>
                            </button>
                            <button onclick="removeRate(${index})" 
                                    class="text-gray-600 hover:text-red-600 transition-colors"
                                    title="Delete">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        function updateRate(index, field, value) {
            if (currentRates[index]) {
                if (field === 'coins_required' || field === 'duration') {
                    currentRates[index][field] = parseInt(value);
                } else if (field === 'price') {
                    currentRates[index][field] = parseFloat(value);
                } else {
                    currentRates[index][field] = value;
                }
                
                // Auto-calculate price based on coin value and count
                if (field === 'coins_required') {
                    currentRates[index].price = coinSettings.coin_value * parseInt(value);
                }
                
                renderRatesTable();
                updateStats();
                addActivityLog(`Updated ${field} for ${currentRates[index].name}`, 'info');
            }
        }

        function updateRateDuration(index, value) {
            updateRate(index, 'duration', parseInt(value));
        }

        function toggleRateStatus(index) {
            currentRates[index].is_active = !currentRates[index].is_active;
            renderRatesTable();
            updateStats();
            addActivityLog(`${currentRates[index].is_active ? 'Enabled' : 'Disabled'} ${currentRates[index].name}`, 'info');
        }

        function addNewRate() {
            const newRate = {
                id: null,
                name: `Package ${currentRates.length + 1}`,
                duration: 1800, // 30 minutes
                coins_required: 2,
                price: coinSettings.coin_value * 2,
                is_active: true
            };
            
            currentRates.push(newRate);
            renderRatesTable();
            updateStats();
            
            addActivityLog(`New rate package "${newRate.name}" created`, 'info');
        }

        function duplicateRate(index) {
            const original = currentRates[index];
            const duplicate = {
                ...original,
                id: null,
                name: original.name + ' (Copy)'
            };
            
            currentRates.push(duplicate);
            renderRatesTable();
            updateStats();
            
            addActivityLog(`Rate package "${original.name}" duplicated`, 'info');
        }

        function removeRate(index) {
            if (confirm('Delete this rate package?')) {
                const rateName = currentRates[index].name;
                currentRates.splice(index, 1);
                renderRatesTable();
                updateStats();
                
                addActivityLog(`Rate package "${rateName}" deleted`, 'warning');
            }
        }

        async function saveAllRates() {
            try {
                addActivityLog('Saving all rate packages...', 'info');
                
                // Simulate save
                setTimeout(() => {
                    addActivityLog('All rate packages saved successfully', 'success');
                }, 1000);
            } catch (error) {
                addActivityLog('Save failed: ' + error.message, 'error');
            }
        }

        async function loadCoinSettings() {
            // Simulate loading coin settings
            document.getElementById('coin_value').value = coinSettings.coin_value;
            document.getElementById('pulses_per_coin').value = coinSettings.pulses_per_coin;
        }

        document.getElementById('coin-config-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            coinSettings = {
                coin_value: parseFloat(formData.get('coin_value')),
                pulses_per_coin: parseInt(formData.get('pulses_per_coin'))
            };
            
            addActivityLog('Coin settings updated successfully', 'success');
            renderRatesTable(); // Re-render to reflect new coin values
        });

        function updateStats() {
            const active = currentRates.filter(r => r.is_active).length;
            document.getElementById('total-packages').textContent = active;
        }

        // Test functions
        async function testCoinPulse() {
            addActivityLog('Testing coin pulse detection...', 'info');
            
            setTimeout(() => {
                const now = new Date().toLocaleTimeString();
                document.getElementById('last-pulse').textContent = now;
                
                const totalPulses = parseInt(document.getElementById('total-pulses').textContent) + coinSettings.pulses_per_coin;
                document.getElementById('total-pulses').textContent = totalPulses;
                
                const revenue = parseFloat(document.getElementById('revenue-today').textContent.replace('₱', '')) + coinSettings.coin_value;
                document.getElementById('revenue-today').textContent = `₱${revenue.toFixed(2)}`;
                
                addActivityLog(`Test pulse detected: ${coinSettings.pulses_per_coin} pulse(s) = ₱${coinSettings.coin_value}`, 'success');
            }, 1000);
        }

        function resetCounters() {
            if (confirm('Reset all counters and statistics?')) {
                document.getElementById('total-pulses').textContent = '0';
                document.getElementById('revenue-today').textContent = '₱0.00';
                document.getElementById('last-pulse').textContent = 'Never';
                
                addActivityLog('All counters reset', 'warning');
            }
        }

        function addActivityLog(message, type) {
            const logsDiv = document.getElementById('activity-log');
            const timestamp = new Date().toLocaleTimeString();
            const color = {
                'info': 'text-blue-600',
                'success': 'text-green-600',
                'error': 'text-red-600',
                'warning': 'text-yellow-600'
            }[type] || 'text-gray-700';
            
            const logEntry = document.createElement('div');
            logEntry.className = `${color} text-sm mb-1`;
            logEntry.innerHTML = `[${timestamp}] ${message}`;
            
            logsDiv.appendChild(logEntry);
            logsDiv.scrollTop = logsDiv.scrollHeight;
        }

        function clearActivityLog() {
            document.getElementById('activity-log').innerHTML = '';
            addActivityLog('Activity log cleared', 'info');
        }

        // Initialize page
        addActivityLog('Coin rates management page loaded', 'info');
        addActivityLog(`Coin denomination: ₱${coinSettings.coin_value} (${coinSettings.pulses_per_coin} pulse per coin)`, 'info');
    </script>
</body>
</html>